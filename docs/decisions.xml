<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>V-Sekai - Manuals</title>
<link>https://v-sekai.github.io/manuals/decisions.html</link>
<atom:link href="https://v-sekai.github.io/manuals/decisions.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.4.554</generator>
<lastBuildDate>Sun, 12 May 2024 18:32:25 GMT</lastBuildDate>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/present-proposal-template.html</link>
  <description><![CDATA[ 




<section id="proposed-template" class="level1">
<h1>Proposed: Template</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
</section>
<section id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams">Describe how your proposal will work with code, pseudo-code, mock-ups, or diagrams</h2>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p>AI assistant Aria assisted with this article.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/present-proposal-template.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240511-wasm-cache-incident.html</link>
  <description><![CDATA[ 




<section id="accepted-wasm-cache-incident-report" class="level1">
<h1>Accepted: Wasm Cache Incident Report</h1>
<section id="context" class="level2">
<h2 class="anchored" data-anchor-id="context">Context</h2>
<p>The issue arose while attempting to build the desync module for Godot Engine 4.3 on Github actions.</p>
</section>
<section id="problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="problem-statement">Problem Statement</h2>
<p>The following error was encountered even though the module is disabled from building and other code was identical to master:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">error:</span> undefined symbol: saveSetjmp <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">referenced</span> by root reference <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">e.g.</span> compiled C/C++ code<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> To disable errors for undefined symbols use <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">-sERROR_ON_UNDEFINED_SYMBOLS=0</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">`</span></span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> _saveSetjmp may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">error:</span> undefined symbol: testSetjmp <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">referenced</span> by root reference <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">e.g.</span> compiled C/C++ code<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb1-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">warning:</span> _testSetjmp may need to be added to EXPORTED_FUNCTIONS if it arrives from a system library</span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Error:</span> Aborting compilation due to previous errors</span>
<span id="cb1-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">em++:</span> error: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/home/runner/work/_temp/5ca5bc6c-db6b-4fae-a502-2fde903054ae/emsdk-main/node/16.20.0_64bit/bin/node /home/runner/work/_temp/5ca5bc6c-db6b-4fae-a502-2fde903054ae/emsdk-main/upstream/emscripten/src/compiler.mjs /tmp/tmpjyhtoot1.json'</span> failed <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">returned</span> 1<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scons:</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">***</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">bin/godot.web.template_release.wasm32.js</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> Error 1</span>
<span id="cb1-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">scons:</span> building terminated because of errors.</span></code></pre></div>
</section>
<section id="proposed-solution" class="level2">
<h2 class="anchored" data-anchor-id="proposed-solution">Proposed Solution</h2>
<p>The proposed solution involves modifying the web build Github Actions and suffixing the branch name. The steps are as follows:</p>
<ol type="1">
<li>Modify the <code>GODOT_BASE_BRANCH</code> environment variable in the Github Actions workflow file:</li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> üåê Web Builds</span></span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">on</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">workflow_call</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Global Settings</span></span>
<span id="cb2-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">env</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  # Used for the cache key. Add version suffix to force clean build.</span></span>
<span id="cb2-8"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GODOT_BASE_BRANCH</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> master</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> # Add a suffix here.</span></span></code></pre></div>
<ol start="2" type="1">
<li>Combine master with em version: <code>master-em-3.1.59</code></li>
<li>Commit the changes.</li>
</ol>
</section>
<section id="benefits" class="level2">
<h2 class="anchored" data-anchor-id="benefits">Benefits</h2>
<p>This solution will help in resolving the current build issue and ensure that the Godot Engine 4.3 desync module is built successfully.</p>
</section>
<section id="downsides" class="level2">
<h2 class="anchored" data-anchor-id="downsides">Downsides</h2>
<p>The downside of this approach is that it requires manual intervention for each build process, which might not be feasible for continuous integration/continuous deployment (CI/CD) pipelines.</p>
</section>
<section id="alternatives-considered" class="level2">
<h2 class="anchored" data-anchor-id="alternatives-considered">Alternatives Considered</h2>
<p>An alternative could be to investigate the root cause of the undefined symbols and fix them at the source code level.</p>
</section>
<section id="infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="infrequent-use-case">Infrequent Use Case</h2>
<p>This solution is specifically for the current build issue and may not apply to other build problems or modules.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>This proposal is made by us and is intended to be implemented in the core build process of the Godot Engine.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Accepted</p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> - The GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p>This proposal was assisted by Aria, an AI assistant.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240511-wasm-cache-incident.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240511-review-10000-vr.html</link>
  <description><![CDATA[ 




<section id="proposed-vr-game-with-960-players" class="level1">
<h1>Proposed: VR Game with 960 Players</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>We aim to create a virtual reality (VR) game that can support ten thousand players simultaneously.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>The challenge lies in managing the load of player simulations, world servers, and game state delivery.</p>
</section>
<section id="the-problem-statement-1" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement-1">The Problem Statement</h2>
<p>The challenge lies in managing the load of player simulations, world servers, and game state delivery.</p>
<p>TODO: Fix math.</p>
<section id="player-simulation-results" class="level3">
<h3 class="anchored" data-anchor-id="player-simulation-results">Player Simulation Results</h3>
<pre class="gdscript"><code># Create 80 player nodes, each on a separate SQLite database on a TBD CPU bare metal machine
# Requires 12 player servers for 960 players
extends Node

class_name Player
var id : String
var state : PackedByteArray

var db := MVSQLite.new()
var http_request = HTTPRequest.new()

# Declare the query as an instance variable
var insert_query

func _ready():
    self.add_child(http_request)
    http_request.connect("request_completed", self, "_on_request_completed")

    var player := Player.new()
    player.id = generate_uuid()
    player.state = PackedByteArray()

    var err = http_request.request("http://localhost:7001/api/create_namespace",
                                   ["Content-Type: application/json"],
                                   true,
                                   HTTPClient.METHOD_POST,
                                   '{"key":"' + player.id + '"}')
    if err == OK:
        print("Request sent")
    else:
        print("Error sending request")

    if db.open(player.id):
        var sql := "CREATE TABLE IF NOT EXISTS players (id TEXT PRIMARY KEY, state BLOB)"
        var query = db.create_query(sql)
        query.execute()

        sql = "INSERT INTO players (id, state) VALUES (?, ?)"
        insert_query = db.create_query(sql)

    else:
        print("Error: ", db.get_last_error_message())

func update_player_states(players):
    for player in players:
        # TODO: open player databases
        var db = dbs[player.id % 100]
        var sql := "INSERT OR REPLACE INTO players (id, state) VALUES (?, ?)"
        var query = db.create_query(sql)
        query.execute([player.id, player.state])

func _process(_delta):
    var player_state := PackedByteArray()
    for j in range(10):
        player_state.append(randi() % 256)

    var player := Player.new()
    player.id = generate_uuid()
    player.state = player_state

    insert_query.execute([player.id, player.state])

    if insert_query.get_last_error_message() != "":
        print("Error: ", insert_query.get_last_error_message())

func _on_request_completed(result, response_code, headers, body):
    var str = body.get_string_from_utf8()
    if response_code == 200:
        print("Request completed successfully")
    else:
        print("Request failed with response code: ", response_code)
        print("Response body: ", str)

func generate_uuid() -&gt; String:
    var uuid := PackedByteArray.generate_random_bytes(16)
    return "%02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x" % [
        uuid[0], uuid[1], uuid[2], uuid[3], uuid[4], uuid[5], uuid[6], uuid[7],
        uuid[8], uuid[9], uuid[10], uuid[11], uuid[12], uuid[13], uuid[14], uuid[15]
    ]</code></pre>
</section>
<section id="world-servers" class="level3">
<h3 class="anchored" data-anchor-id="world-servers">World Servers</h3>
<p>We are going with the grid approach. Our world is a 1km by 1km area and each grid cell is 100m squared.</p>
<p>Player servers need to regularly update the world server with the state of each player.</p>
<p>After the player simulation completes, the player server forwards the shallow player state to the world server 100 times per second.</p>
<p>A 1x1 grid of 100m squared requires 1 world server.</p>
<p>The World Server goes to the player databases and selects, modifies, and inserts.</p>
<pre class="gdscript"><code>var id : int
var dbs = []

func _init():
    for i in range(80):
        var db := MVSQLite.new()
        if !db.open("world_server_" + str(i) + ".db"):
            print("Error: ", db.get_last_error_message())
        else:
            dbs.append(db)

func update_player_states(players):
    for player in players:
        var db = dbs[player.id % 80]
        var sql := "INSERT OR REPLACE INTO players (id, state) VALUES (?, ?)"
        var query = db.create_query(sql)
        query.execute([player.id, player.state])

        if query.get_last_error_message() != "":
            print("Error: ", query.get_last_error_message())

func get_player_states():
    var player_states = []
    for db in dbs:
        var sql := "SELECT id, state FROM players"
        var query = db.create_query(sql)
        query.execute([])

        while query.step() == SQLiteQuery.BUSY:
            var player_state = {}
            player_state["id"] = query.get_column_text(0)
            player_state["state"] = query.get_column_blob(1)
            player_states.append(player_state)

    return player_states</code></pre>
</section>
<section id="world-database" class="level3">
<h3 class="anchored" data-anchor-id="world-database">World Database</h3>
<p>Our player server is designed to accommodate up to 80 game players. These players are distributed across TBD CPUs. Each CPU is tasked with managing a total of TBD players.</p>
<p>To handle such a load, we run TBD processes per CPU. These processes block on some asynchronous calls out to world servers.</p>
<p>Our choice of database for this world is SQLite FoundationDB.</p>
</section>
<section id="game-state-delivery" class="level3">
<h3 class="anchored" data-anchor-id="game-state-delivery">Game State Delivery</h3>
<p>The game state delivery process involves each world server generating a stream of data containing the states of all players. This data is then sent to the client-side for rendering and interaction.</p>
<pre class="gdscript"><code>var db := MVSQLite.new()
var query = null

func _init():
    if !db.open("world_server_01"):
        print("Error: ", db.get_last_error_message())
    else:
        prepare_query()

func prepare_query():
    var sql := "SELECT id, state FROM players"
    query = db.create_query(sql)

func get_player_states():
    if query == null:
        print("Error: Query not prepared")
        return []

    var results = query.execute([])

    var player_states = []
    for row in results:
        var player_state = {}
        player_state["id"] = row[0]
        player_state["state"] = row[1]
        player_states.append(player_state)

    return player_states</code></pre>
<p>This list can then be used to generate the TBD mbit/sec stream of packets that is sent from each world server. The total of TBD mbit generated per second is achieved by running this process across all 12 world servers.</p>
<p>Please note that the limiting factor here is due to the lack of multicast support over the internet.</p>
</section>
<section id="state-updates-per-second" class="level3">
<h3 class="anchored" data-anchor-id="state-updates-per-second">State updates per second</h3>
<table class="table">
<colgroup>
<col style="width: 22%">
<col style="width: 10%">
<col style="width: 10%">
<col style="width: 27%">
<col style="width: 27%">
<col style="width: 1%">
</colgroup>
<thead>
<tr class="header">
<th>Server Type</th>
<th>Operation</th>
<th>Frequency</th>
<th>Transactions per Second</th>
<th>Input Count</th>
<th>Output Count</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Player</td>
<td>Write</td>
<td>100 FPS</td>
<td>100 writes/sec</td>
<td>80</td>
<td>12</td>
</tr>
<tr class="even">
<td>World</td>
<td>Write</td>
<td>100 FPS</td>
<td>100 writes/sec</td>
<td>12</td>
<td>12 + 80</td>
</tr>
</tbody>
</table>
</section>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<ul>
<li>Supports a large number of players simultaneously</li>
<li>Provides a rich, immersive gaming experience</li>
</ul>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<ul>
<li>Requires significant resources and infrastructure</li>
<li>Bandwidth requirements may be high for some players</li>
<li>Lack of multicast support over the internet could limit game state delivery</li>
</ul>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>An alternative would be to limit the number of players, but this would compromise the scale and immersion of the game.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>In cases where player traffic is consistently low, the infrastructure may be underutilized.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>The proposed stress testing will be conducted by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
<li><a href="https://mas-bandwidth.com/creating-a-first-person-shooter-that-scales-to-millions-of-players">creating-a-first-person-shooter-that-scales-to-millions-of-players</a></li>
</ol>
<p>AI assistant Aria assisted with this article.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240511-review-10000-vr.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240502-where-can-I-use-gltf.html</link>
  <description><![CDATA[ 




<section id="proposed-can-i-use-v-sekai-for-3d-assets-3d-extensions" class="level1">
<h1>Proposed: Can I use V-Sekai for 3d assets &amp; 3d extensions?</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>In the current digital landscape, there is a chaos of many different platforms.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>The problem lies in the lack of interoperability among various platforms. This leads to inefficiencies and difficulties in sharing and utilizing resources across these platforms, especially when it comes to 3D assets and extensions.</p>
</section>
<section id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams">Describe how your proposal will work with code, pseudo-code, mock-ups, or diagrams</h2>
<p>We propose to develop an Elixir website that facilitates the sharing of interoperability among different file formats including fbx, usd, gltf, Godot Engine tscn, and vrm. This would allow for easier sharing and utilization of 3D assets and extensions across various platforms.</p>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<p>This proposal, if implemented, would streamline the process of sharing and using 3D resources across different platforms. It would also foster collaboration and innovation by making it easier for developers to utilize resources from various sources.</p>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<p>Potential downsides could include the complexity of developing such a platform and ensuring its compatibility with all the mentioned file formats. There may also be potential security concerns that need to be addressed.</p>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>Alternative solutions could involve developing individual converters for each file format, but this would not provide the same level of efficiency and convenience as a unified platform.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>In cases where only one or two file formats are being used, the benefits of this platform may not be fully realized.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>This project would be developed and maintained by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
<li><a href="https://caniuse.com/">caniuse</a></li>
</ol>
<p>AI assistant Aria assisted with this article.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240502-where-can-I-use-gltf.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240502-mvsqlite-launchd.html</link>
  <description><![CDATA[ 




<section id="proposed-launching-the-mvsqlite-rdbms-server" class="level1">
<h1>Proposed: Launching the mvsqlite rdbms server</h1>
<section id="context" class="level2">
<h2 class="anchored" data-anchor-id="context">Context</h2>
<p>In software development and maintenance, automation of routine tasks is crucial for efficiency. One such task is launching a database server at system startup. For macOS users, this can be achieved using <code>launchd</code>, an open-source service management framework. In this context, we are specifically interested in automating the launch of the <code>mvsqlite</code> RDBMS server.</p>
</section>
<section id="problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="problem-statement">Problem Statement</h2>
<p>The task at hand is to create a <code>launchd</code> service for macOS that will automatically run the following command at system startup:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/usr/local/bin/mvstore</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--data-plane</span> 127.0.0.1:7000 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--admin-api</span> 127.0.0.1:7001 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--metadata-prefix</span> mvstore-test <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--raw-data-prefix</span> m <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--auto-create-namespace</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cluster</span> /usr/local/etc/foundationdb/fdb.cluster</span></code></pre></div>
<p>Additionally, we need to be able to retrieve logs from this service and check its status.</p>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<p>To solve this problem, we can create a <code>.plist</code> file in the <code>~/Library/LaunchAgents</code> directory. This file will define our <code>launchd</code> service and specify the command it should run. We can also add keys to redirect the standard output and error to log files. Finally, we can use the <code>launchctl list</code> command to check the status of our service.</p>
<p>Here are the detailed steps:</p>
<section id="creating-the-.plist-file" class="level3">
<h3 class="anchored" data-anchor-id="creating-the-.plist-file">Creating the .plist File</h3>
<ol type="1">
<li>Open Terminal and navigate to the LaunchAgents directory:</li>
</ol>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ~/Library/LaunchAgents</span></code></pre></div>
<ol start="2" type="1">
<li>Create a new <code>.plist</code> file called <code>com.user.mvstore.plist</code>:</li>
</ol>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">touch</span> com.user.mvstore.plist</span></code></pre></div>
<ol start="3" type="1">
<li>Open the file with a text editor (e.g., nano):</li>
</ol>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nano</span> com.user.mvstore.plist</span></code></pre></div>
<ol start="4" type="1">
<li>Paste the following content into the file:</li>
</ol>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode xml code-with-copy"><code class="sourceCode xml"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">&lt;?xml</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> version=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.0"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> encoding=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UTF-8"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">?&gt;</span></span>
<span id="cb5-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&lt;!DOCTYPE</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">plist</span> PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">&gt;</span></span>
<span id="cb5-3">&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plist</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> version=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.0"</span>&gt;</span>
<span id="cb5-4">&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">dict</span>&gt;</span>
<span id="cb5-5">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;Label&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;</span>
<span id="cb5-6">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;com.user.mvstore&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-7">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;ProgramArguments&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;</span>
<span id="cb5-8">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">array</span>&gt;</span>
<span id="cb5-9">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;/usr/local/bin/mvstore&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-10">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;--data-plane&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-11">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;127.0.0.1:7000&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-12">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;--admin-api&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-13">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;127.0.0.1:7001&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-14">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;--metadata-prefix&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-15">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;mvstore-test&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-16">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;--raw-data-prefix&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-17">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;m&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-18">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;--auto-create-namespace&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-19">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;--cluster&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-20">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;/usr/local/etc/foundationdb/fdb.cluster&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-21">    &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">array</span>&gt;</span>
<span id="cb5-22">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;RunAtLoad&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;</span>
<span id="cb5-23">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span>/&gt;</span>
<span id="cb5-24">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;EnvironmentVariables&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;</span>
<span id="cb5-25">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">dict</span>&gt;</span>
<span id="cb5-26">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;RUST_LOG&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;</span>
<span id="cb5-27">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;info&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-28">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;DYLD_LIBRARY_PATH&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">key</span>&gt;</span>
<span id="cb5-29">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;/usr/local/lib&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">string</span>&gt;</span>
<span id="cb5-30">    &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">dict</span>&gt;</span>
<span id="cb5-31">&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">dict</span>&gt;</span>
<span id="cb5-32">&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plist</span>&gt;</span></code></pre></div>
<ol start="5" type="1">
<li><p>Save and close the file.</p></li>
<li><p>Load the new service:</p></li>
</ol>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">launchctl</span> load ~/Library/LaunchAgents/com.user.mvstore.plist</span></code></pre></div>
</section>
<section id="retrieving-logs" class="level3">
<h3 class="anchored" data-anchor-id="retrieving-logs">Retrieving Logs</h3>
<p>To retrieve logs from the <code>launchd</code> service, add the <code>StandardOutPath</code> and <code>StandardErrorPath</code> keys to the <code>.plist</code> file. These keys will redirect the standard output (stdout) and standard error (stderr) to specified log files.</p>
</section>
<section id="checking-the-service-status" class="level3">
<h3 class="anchored" data-anchor-id="checking-the-service-status">Checking the Service Status</h3>
<p>To check the <code>launchd</code> status for <code>mvsqlite</code>, use the <code>launchctl list</code> command:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">launchctl</span> list <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> mvstore</span></code></pre></div>
</section>
</section>
<section id="benefits" class="level2">
<h2 class="anchored" data-anchor-id="benefits">Benefits</h2>
<p>Automating tasks with <code>launchd</code> can save time and reduce the risk of errors. It also provides a standardized way to manage services on macOS.</p>
</section>
<section id="downsides" class="level2">
<h2 class="anchored" data-anchor-id="downsides">Downsides</h2>
<p>The main downside is that <code>launchd</code> is specific to macOS, so this solution won‚Äôt work on other operating systems.</p>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>An alternative approach could be to use cron jobs or another task scheduler, but these may not offer the same level of control and flexibility as <code>launchd</code>.</p>
</section>
<section id="infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="infrequent-use-case">Infrequent Use Case</h2>
<p>This solution is most useful for developers who frequently need to run certain commands at system startup. It may be less relevant for casual users or those who don‚Äôt use macOS.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>This solution was developed in-house by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed</p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> - GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p>Assistance provided by Aria, an AI assistant.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240502-mvsqlite-launchd.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240502-mesh-object-sync-benchmark.html</link>
  <description><![CDATA[ 




<section id="proposal-stress-testing-godot-engines-networking-system" class="level1">
<h1>Proposal: Stress Testing Godot Engine‚Äôs Networking System</h1>
<section id="context" class="level2">
<h2 class="anchored" data-anchor-id="context">Context</h2>
<p>The V-Sekai development team is working on a project that involves avatar, world, and prop collaboration workflow in the Godot engine. The team plans to use FoundationDB with SQLite to enhance the performance of this workflow.</p>
</section>
<section id="problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="problem-statement">Problem Statement</h2>
<p>We need to ensure that the networking system of the Godot engine can handle the increased load and perform optimally under stress.</p>
</section>
<section id="solution" class="level2">
<h2 class="anchored" data-anchor-id="solution">Solution</h2>
<p>Create in three stages:</p>
<ol type="1">
<li>local client to local server</li>
<li>local client to remote server</li>
<li>remote client to remote server</li>
</ol>
<p>Does not test infrastructure implementation.</p>
<p>We propose to conduct stress testing on the Godot engine‚Äôs networking system.</p>
<p>This will involve creating multiple virtual users and simulating high traffic scenarios to evaluate how the system performs under heavy load.</p>
<pre class="gdscript"><code># This is a single node example.
# Assuming we have a list of props and a World instance
var props = [prop1, prop2, prop3]
var world = World.new()

for i in range(10): # Simulate 10 users
    var user = User.new() # Create a new user
    var selected_props = [] # List to store selected props

    for _ in range(randi()%props.size()+1): # Randomly select props
        var prop = props[randi()%props.size()]
        selected_props.append(prop)

    user.glue_props(selected_props) # Glue selected props together
    world.merge(user.get_changed_world()) # Merge the changed world into the main world

# Now, let's read back the changed world
print(world.get_state())</code></pre>
<pre><code># To be determined realistic multclient version.</code></pre>
<p>Test personal computer and digital ocean.</p>
</section>
<section id="benefits" class="level2">
<h2 class="anchored" data-anchor-id="benefits">Benefits</h2>
<ul>
<li>Identify potential bottlenecks in the system.</li>
<li>Ensure the system can handle high traffic without compromising performance.</li>
<li>Improve overall system reliability and user experience.</li>
</ul>
</section>
<section id="downsides" class="level2">
<h2 class="anchored" data-anchor-id="downsides">Downsides</h2>
<ul>
<li>Requires time and resources to set up and conduct the tests.</li>
<li>Potential for false positives or negatives due to the simulated nature of the test.</li>
</ul>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>An alternative would be to skip stress testing and directly implement the system. However, this could lead to unforeseen issues in a live environment, potentially affecting user experience.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>In cases where the traffic is consistently low, stress testing may not provide significant benefits. However, it‚Äôs still important to prepare for potential spikes in usage.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>The proposed stress testing will be conducted by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed</p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
<li><a href="https://www.codedojo.com/?p=2091">Stress testing Unity‚Äôs LLAPI, what are the limits?</a></li>
<li><a href="https://ifiregames.itch.io/crappy-contraptions">Crappy Contraption</a></li>
</ol>
<p>This proposal was assisted by Aria, an AI assistant.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240502-mesh-object-sync-benchmark.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240502-membrane-framework-identity-post.html</link>
  <description><![CDATA[ 




<section id="proposed-process-the-gltf2-input-file-and-return-it-as-is" class="level1">
<h1>Proposed: Process the glTF2 input file and return it as is</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>We are working on a project that involves the use of the Elixir Membrane Framework. Our goal is to process glTF (GL Transmission Format) files, which are standard file formats for 3D scenes and models.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>We need to create a job in the Membrane Framework that can take an input glTF file and return it as is. However, we are currently stuck and unable to proceed with this task.</p>
</section>
<section id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams">Describe how your proposal will work with code, pseudo-code, mock-ups, or diagrams</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode elixir code-with-copy"><code class="sourceCode elixir"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">defmodule</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">MyPipeline</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb1-2">  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">use</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Membrane</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Pipeline</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">@impl</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">true</span></span>
<span id="cb1-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> handle_init<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">(</span>_<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb1-6">    children <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> %<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-7">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">source:</span> %<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Membrane</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">File</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Source</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">location:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input.gltf"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span>,</span>
<span id="cb1-8">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sink:</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Membrane</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">File</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Sink</span></span>
<span id="cb1-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-10"></span>
<span id="cb1-11">    links <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-12">      link<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">:source</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-13">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|&gt;</span> to<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">(</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">:sink</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-14">    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-15"></span>
<span id="cb1-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">:ok</span>, %<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">ParentSpec</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">children:</span> children, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">links:</span> links<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}}</span>, %<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{}}</span></span>
<span id="cb1-17">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span></code></pre></div>
<p>This is a basic pipeline that reads a file and writes it back out. It‚Äôs not doing any processing yet, but it‚Äôs a start.</p>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<p>Implementing this feature will allow us to process glTF files within our application, opening up new possibilities for 3D model manipulation and visualization.</p>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<p>The main downside is the complexity involved in understanding and implementing the Membrane Framework. This could potentially slow down development time.</p>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>An alternative approach would have been to use a different framework or language that might be easier to implement but may not offer the same level of control and flexibility as the Membrane Framework.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>This feature may not be used frequently if our application does not heavily rely on 3D model manipulation.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>This feature will be implemented by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p>AI assistant Aria assisted with this article.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240502-membrane-framework-identity-post.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240502-install-windows-on-older-computers.html</link>
  <description><![CDATA[ 




<section id="proposal-enable-windows-11-installation-on-older-computers" class="level1">
<h1>Proposal: Enable Windows 11 Installation on Older Computers</h1>
<section id="context" class="level2">
<h2 class="anchored" data-anchor-id="context">Context</h2>
<p>Many users with older computers wish to upgrade to Windows 11, but face compatibility issues.</p>
</section>
<section id="problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="problem-statement">Problem Statement</h2>
<p>Facilitating the installation of Windows 11 on older computer systems.</p>
</section>
<section id="solution-overview" class="level2">
<h2 class="anchored" data-anchor-id="solution-overview">Solution Overview</h2>
<p>The following steps outline a method to bypass certain system requirements during the Windows 11 installation process:</p>
<ol type="1">
<li>Initiate the Windows 11 installer.</li>
<li>Press SHIFT + F10 to open the command prompt.</li>
<li>Enter <code>regedit</code> and press Enter to open the registry editor.</li>
<li>Navigate to <code>HKEY_LOCAL_MACHINE\SYSTEM\Setup</code>.</li>
<li>Create a new registry key under Setup named <code>LabConfig</code>.</li>
<li>Within <code>LabConfig</code>, create DWORD values named <code>BypassTPMCheck</code> and <code>BypassSecureBootCheck</code>, setting each to <code>1</code>. If you also want to bypass the RAM requirement, add a DWORD value for <code>BypassRAMCheck</code>.</li>
<li>Close both regedit and the command prompt. You should now be able to proceed with your Windows 11 installation.</li>
</ol>
</section>
<section id="benefits" class="level2">
<h2 class="anchored" data-anchor-id="benefits">Benefits</h2>
<ul>
<li>Allows users with older hardware to access Windows 11 features.</li>
<li>Extends the lifespan of older devices.</li>
</ul>
</section>
<section id="downsides" class="level2">
<h2 class="anchored" data-anchor-id="downsides">Downsides</h2>
<ul>
<li>Potential security risks due to bypassing TPM and Secure Boot checks.</li>
<li>Performance may not be optimal on older hardware.</li>
</ul>
</section>
<section id="alternatives-considered" class="level2">
<h2 class="anchored" data-anchor-id="alternatives-considered">Alternatives Considered</h2>
<ul>
<li>Upgrading hardware to meet Windows 11 requirements.</li>
<li>Sticking with Windows 10 or other operating systems.</li>
</ul>
</section>
<section id="infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="infrequent-use-case">Infrequent Use Case</h2>
<p>This proposal is primarily beneficial for users with older hardware who wish to use Windows 11.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>This proposal is currently under consideration by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed</p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai Development Team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
<li>Windows 11</li>
<li>Installation</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> - The GitHub page for the V-Sekai open-source project.</li>
<li><a href="https://www.tomshardware.com/how-to/bypass-windows-11-tpm-requirement">Toms Hardware: bypass-windows-11-tpm-requirement</a></li>
</ol>
<p>Assisted by AI assistant Aria.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240502-install-windows-on-older-computers.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240502-gltf-fbx-tscn-vrm.html</link>
  <description><![CDATA[ 




<section id="proposed-workflows-for-3d-model-conversion" class="level1">
<h1>Proposed: Workflows for 3D Model Conversion</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>In the realm of 3D modeling and animation, there are numerous file formats each with their own unique features and capabilities. However, not all software can support every format, leading to a need for conversion tools.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>The challenge lies in creating a tool that can convert between different 3D model formats, specifically from glTF to FBX, while maintaining the integrity of the original model.</p>
</section>
<section id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams">Describe how your proposal will work with code, pseudo-code, mock-ups, or diagrams</h2>
<p>We propose to develop a workflow for 3D model conversion using the Elixir Membrane Framework.</p>
<p>The primary function of this tool would be to take a glTF file as input and export it as an FBX file. This tool could also potentially support other formats such as USD, Godot Engine tscn, and VRM.</p>
<p>Additionally, we propose a feature where the tool can take a post and return a result. This could be useful for batch processing or automated tasks.</p>
<p>To make these services accessible, we plan to expose them via a Tailscale funnel.</p>
<p>For many of the flows, we can use USD to glTF, then glTF to Godot Engine, and finally Godot Engine to VRM and back. This approach allows us to leverage existing conversion libraries and tools, reducing the amount of custom code we need to write.</p>
<pre class="mermaid"><code>graph LR
    A[USD] --&gt; B[glTF]
    B --&gt; C[Godot Engine]
    C --&gt; D[VRM]
    D --&gt; B</code></pre>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<p>This tool would greatly simplify the process of converting 3D models between different formats, saving time and reducing potential errors.</p>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<p>There may be some loss of data or quality during the conversion process, depending on the complexity of the model and the capabilities of the target format.</p>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>Alternative solutions could involve using existing conversion tools or plugins, but these may not offer the same level of control or flexibility as a custom-built tool.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>While the primary use case is for converting glTF to FBX, the tool could also be used for other less common conversions.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>This tool would be developed in-house by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p>AI assistant Aria assisted with this article.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240502-gltf-fbx-tscn-vrm.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240425-recharge-cycle.html</link>
  <description><![CDATA[ 




<section id="proposed-stuck-recharge-cycle" class="level1">
<h1>Proposed: Stuck / Recharge Cycle</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>In the realm of software development, it‚Äôs common for developers to hit a wall or get ‚Äústuck‚Äù on a particular problem. This can lead to frustration and decreased productivity.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>Developers often find themselves stuck on a problem, unable to make progress. This can be due to a variety of reasons such as lack of understanding, complexity of the problem, or simply mental fatigue.</p>
</section>
<section id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams">Describe how your proposal will work with code, pseudo-code, mock-ups, or diagrams</h2>
<p>The proposed solution is a ‚ÄúStuck/Recharge‚Äù cycle. When a developer finds themselves stuck on a problem, they switch to working on someone else‚Äôs problem. This change in perspective can help recharge their mental energy and when they return to their original problem, they may find that they are able to approach it with a fresh mindset.</p>
<pre class="javscript"><code>if (developer.isStuck()) {
    developer.switchTask();
    developer.recharge();
    developer.returnToOriginalTask();
}</code></pre>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<p>This approach can help prevent burnout and increase overall productivity. It also promotes collaboration and knowledge sharing among the team.</p>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<p>There could be potential downsides such as context switching overhead and disruption of flow. However, these can be mitigated with proper task management and communication within the team.</p>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>An alternative approach could be to have dedicated ‚Äúunsticking‚Äù sessions where developers come together to brainstorm solutions for stuck problems. However, this requires coordination and may not be as flexible as the proposed solution.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>This proposal may not be beneficial for simple tasks or for developers who rarely get stuck.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>This proposal is applicable to our core development process and can be implemented by us.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p>AI assistant Aria assisted with this article.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240425-recharge-cycle.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240425-proposal-prompt-system.html</link>
  <description><![CDATA[ 




<section id="proposal-chatgpt-4-based-proposal-prompt-system" class="level1">
<h1>Proposal: ChatGPT-4 Based Proposal Prompt System</h1>
<section id="context" class="level2">
<h2 class="anchored" data-anchor-id="context">Context</h2>
<p>In the current scenario, creating proposals can be a time-consuming task. It requires a lot of brainstorming and writing which can sometimes lead to inefficiency and delay in work.</p>
</section>
<section id="problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="problem-statement">Problem Statement</h2>
<p>The problem lies in the manual creation of proposals. The process is slow and often lacks creativity due to human limitations. There is a need for an automated system that can generate proposals efficiently and creatively.</p>
</section>
<section id="proposed-solution" class="level2">
<h2 class="anchored" data-anchor-id="proposed-solution">Proposed Solution</h2>
<p>We propose a system that uses OpenAI‚Äôs ChatGPT-4 to generate proposals. The user will provide a prompt such as <code>Create a proposal. Don't be purple. Be snappy.</code> and the system will use this prompt to generate a proposal.</p>
</section>
<section id="benefits" class="level2">
<h2 class="anchored" data-anchor-id="benefits">Benefits</h2>
<ol type="1">
<li><strong>Efficiency</strong>: This system will significantly reduce the time taken to create proposals.</li>
<li><strong>Creativity</strong>: With GPT-4‚Äôs advanced language model, the proposals generated will be creative and engaging.</li>
<li><strong>Ease of Use</strong>: Users just need to provide a prompt and the system will take care of the rest.</li>
</ol>
</section>
<section id="downsides" class="level2">
<h2 class="anchored" data-anchor-id="downsides">Downsides</h2>
<p>The system may not always provide the best decision but only the most common wisdom. It might require human intervention to fine-tune the proposals.</p>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>There could be other AI models or methods to automate the proposal generation process. However, considering the performance and capabilities of GPT-4, it seems to be the most suitable choice.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>This system might not be very useful for users who rarely need to create proposals.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>The system will be developed and maintained by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed</p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
<li>Proposal Generation</li>
<li>GPT-4</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p>This proposal was assisted by AI assistant Aria.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240425-proposal-prompt-system.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240424-reset-steamvr-controllers.html</link>
  <description><![CDATA[ 




<section id="proposed-prioritizing-valve-controllers-over-meta-quest-3-controllers" class="level1">
<h1>Proposed: Prioritizing Valve Controllers Over Meta Quest 3 Controllers</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>We are considering the use of Quest 3 and Lighthouse tracked Valve Index controllers for our project when using playspace calibration.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>The issue we face is that when a Meta Quest 3 is used, it takes over the controller priority. So we‚Äôre unable to open the steamvr menu.</p>
</section>
<section id="solution-proposal" class="level2">
<h2 class="anchored" data-anchor-id="solution-proposal">Solution Proposal</h2>
<p>To address this problem, we propose turning the SteamVR Index controller on and off. This action will prioritize the Valve controller over the Meta controller.</p>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<ul>
<li>Ensures optimal functionality of the Valve controller.</li>
<li>Prevents interference from the Meta controller.</li>
</ul>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<ul>
<li>May need to be adjusted for different hardware configurations.</li>
</ul>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>We could have chosen to let the Meta controller take priority, but this would not have been ideal for our specific needs.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>This solution may not be necessary for users who do not use a Meta Quest 3.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>This proposal has been developed and will be implemented by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> - The GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p>This proposal was assisted by AI assistant, Aria.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240424-reset-steamvr-controllers.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240423-building-metaverse-with-glue-mechanic.html</link>
  <description><![CDATA[ 




<section id="accepted-building-a-metaverse-with-glue-mechanic-in-v-sekai" class="level1">
<h1>Accepted: Building a Metaverse with Glue Mechanic in V-Sekai</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>V-Sekai is an open-source project that brings social VR/VRSNS/metaverse components to the Godot Engine. The current focus of the project is on avatar movement and interaction within a confined space.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>The current model of V-Sekai, while functional, seems limited in its scope. It primarily focuses on avatars moving in a room, which restricts the potential for expansive world-building and exploration.</p>
</section>
<section id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams">Describe how your proposal will work with code, pseudo-code, mock-ups, or diagrams</h2>
<p>The proposed solution is to introduce a ‚Äúglue mechanic‚Äù into the system. This mechanic would allow users to build their own vehicles and structures by gluing different elements together. This could potentially open up the possibility for creating entire universes within the metaverse.</p>
<p>This idea was inspired by a game called ‚ÄúCrazy Contraptions‚Äù developed by Mantafloof during the Ludum Dare 55 game jam. The game was created in just 48 hours and successfully implemented the glue mechanic concept.</p>
<p>Users can combine different elements (represented here as ‚Äòblocks‚Äô and ‚Äòwheels‚Äô) to create new structures or vehicles.</p>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<ul>
<li>Encourages creativity and innovation among users.</li>
<li>Opens up possibilities for expansive world-building and exploration.</li>
<li>Provides a reason to work on LODs and memory management for loading worlds.</li>
</ul>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<ul>
<li>May require significant changes to the existing codebase.</li>
<li>This could potentially increase the complexity of the system.</li>
</ul>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>An alternative approach could be to continue focusing on avatar movement and interaction within a confined space. However, this may limit the potential for expansive world-building and exploration.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>In cases where users prefer a more confined and controlled environment, the glue mechanic may not be as appealing. However, it could still provide an interesting option for those looking to experiment with world-building.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>The implementation of the glue mechanic would be done by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Accepted</p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p>AI assistant Aria assisted with this article.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240423-building-metaverse-with-glue-mechanic.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240418-college-quest.html</link>
  <description><![CDATA[ 




<section id="proposed-town-courier" class="level1">
<h1>Proposed: Town Courier</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>In the current gaming landscape, there is a noticeable gap for immersive, open-world games set in realistic environments such as a college town. Most games focus on fantasy or post-apocalyptic settings, leaving room for games that engagingly simulate everyday life.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>The goal is to create an open-world game that provides players with a unique and dynamic environment, offering a fresh experience every time they play. The game should be set in a bustling college town and allow players to take on the role of a delivery person completing quests. The delivery person will navigate the town on a moped, adding an extra layer of fun and challenge to the gameplay.</p>
</section>
<section id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams">Describe how your proposal will work with code, pseudo-code, mock-ups, or diagrams</h2>
<p>‚ÄúTown Courier‚Äù will be developed using the Godot Engine. The game world will be procedurally generated, ensuring that no two playthroughs are identical. NPCs will assign delivery quests to the player, who must navigate the town and deliver items on a moped within a specified time limit. We will utilize the preexisting vehicle code from ‚ÄúCrappy Contraptions‚Äù to facilitate the movement mechanics in our game.</p>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<p>This game will fill a niche in the market for realistic, open-world games. It will provide players with a unique and dynamic gaming experience, keeping them engaged and encouraging replayability.</p>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<p>The development of a procedurally generated open-world game can be complex and time-consuming. Additionally, balancing the difficulty of the quests to ensure they are challenging but not frustrating may require extensive testing and tweaking.</p>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>An alternative approach could be to create a static game world with pre-defined quests. However, this would not provide the same level of replayability and could become repetitive for players.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>In rare cases, the procedural generation may create a game world that is difficult or impossible to navigate. This will need to be addressed during testing.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>The core gameplay mechanics, including movement, item pickup, and quest assignment, will be developed by our team. We will also handle the creation of the procedurally generated game world.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed</p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
<li><a href="https://github.com/V-Sekai-fire/ludum-dare-55.git">Crappy Contraptions</a></li>
<li><a href="https://sketchfab.com/3d-models/city-grid-block-3488e40ceca846bb9023f894a749c398">‚ÄúCity Grid Block‚Äù (https://skfb.ly/onMzQ) by antoniojmonteiro is licensed under Creative Commons Attribution</a></li>
</ol>
<p>AI assistant Aria assisted with this article.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240418-college-quest.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240416-previewer-upload-gltf-to-glb.html</link>
  <description><![CDATA[ 




<section id="proposal-implementing-a-3d-previewer-for-gltf-with-xmp-metadata" class="level1">
<h1>Proposal: Implementing a 3D Previewer for GLTF with XMP Metadata</h1>
<section id="context" class="level2">
<h2 class="anchored" data-anchor-id="context">Context</h2>
<p>The current project involves the use of 3D models in GLTF format. These models also contain XMP metadata which needs to be previewed.</p>
</section>
<section id="problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="problem-statement">Problem Statement</h2>
<p>The challenge lies in creating a 3D previewer that handles GLTF files and their associated XMP metadata. The aim is to have one file per entry, making it easier to manage and organize the data.</p>
</section>
<section id="proposed-solution" class="level2">
<h2 class="anchored" data-anchor-id="proposed-solution">Proposed Solution</h2>
<p>The proposed solution involves loading a GLTF file and saving it as a GLB file. This process is lossless, meaning no data will be lost during the conversion. The GLB file will then preview the 3D model and its metadata.</p>
<pre class="pseudo"><code>function convertToGLB(gltfFile) {
    // Load the GLTF file
    var gltf = loadGLTF(gltfFile);

    // Convert the GLTF to GLB
    var glb = gltf.toGLB();

    // Save the GLB file
    saveGLB(glb);
}</code></pre>
</section>
<section id="benefits" class="level2">
<h2 class="anchored" data-anchor-id="benefits">Benefits</h2>
<ul>
<li>Simplifies the workflow by having only one file per entry.</li>
<li>No loss of data during the conversion from GLTF to GLB.</li>
<li>Makes it easier to compress in Godot Engine‚Äôs workflow.</li>
</ul>
</section>
<section id="downsides" class="level2">
<h2 class="anchored" data-anchor-id="downsides">Downsides</h2>
<ul>
<li>Requires additional processing to convert GLTF files to GLB.</li>
<li>Might increase the overall size of the project due to the conversion.</li>
</ul>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>An alternative approach could be to keep the GLTF and XMP metadata separate and create a previewer that can handle multiple files. However, this would complicate the workflow and make it harder to manage the data.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>This proposal might not be beneficial for projects that do not require a 3D previewer or do not use GLTF files.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>The implementation of this proposal will be done by the V-Sekai development team.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Proposed</p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p><em>This proposal was assisted by AI assistant Aria.</em></p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240416-previewer-upload-gltf-to-glb.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240413-training-quad-based-meshgpt-with-40gb-vram.html</link>
  <description><![CDATA[ 




<section id="proposed-train-quad-based-meshgpt-within-constraints" class="level1">
<h1>Proposed: Train quad-based Meshgpt within constraints</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>The goal is to train a MeshGPT model for quad-based geometry with limited resources of one day using fixed Nvidia GPU hardware to evaluate its performance.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>Describe a workflow for training Meshgpt with quad-based meshes to create a set of LODs (Level of Detail) within the given constraints.</p>
</section>
<section id="proposed-workflow-with-data-selection-section" class="level2">
<h2 class="anchored" data-anchor-id="proposed-workflow-with-data-selection-section">Proposed Workflow (with Data Selection Section)</h2>
<ol type="1">
<li><p><strong>Data Preparation</strong>: Collect a diverse dataset of quad-based meshes suitable for generating LODs. This involves cleaning and normalizing the data to ensure consistency and remove inconsistencies or errors. Categorizing the data based on complexity and size allows for targeted training and model performance evaluation across different mesh types. A requirement is to attribute every available source 3d model. Gather a dataset of quad-based meshes representing various objects within the distance range of interest.</p></li>
<li><p><strong>Model Architecture Selection</strong>: Choose an appropriate language model architecture to handle geometric data effectively. MeshGPT could be a good starting point due to its success in handling 3D mesh generation tasks.</p></li>
<li><p><strong>Batch Processing Technique</strong>: Implement a batch processing technique to optimize the use of GPU resources.</p></li>
<li><p><strong>Hyperparameter Tuning</strong>: Fine-tune the hyperparameters, such as learning rate, batch size, and number of layers, to achieve optimal performance within the given time constraint. This may involve experimentation with different values and configurations to find the best setup for the chosen model architecture and dataset.</p></li>
<li><p><strong>Training Process</strong>: Train the MeshGPT model using the prepared dataset with the chosen architecture, optimized batch processing technique, and fine-tuned hyperparameters for over one day. This involves monitoring the training process and making necessary adjustments to ensure optimal performance within the given timeframe.</p></li>
<li><p><strong>Evaluation</strong>: Evaluate the trained model‚Äôs performance by generating LODs for a diverse quad-based mesh and comparing them to ground truth data or existing LOD generation methods.</p></li>
<li><p><strong>Results Analysis</strong>: Analyze the results obtained from the evaluation stage, focusing on metrics such as accuracy, speed, and resource usage.</p></li>
</ol>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<ul>
<li>Efficient utilization of Video RAM in training large language models for mesh generation tasks.</li>
<li>Ability to train the MeshGPT model within a one-day timeframe.</li>
<li>Improved LOD generation capabilities for quad-based meshes.</li>
</ul>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<ul>
<li>Limited flexibility due to the constraint of Video RAM.</li>
<li>Training large language models can be computationally intensive and require significant processing power, potentially impacting system performance.</li>
<li>Requires careful hyperparameter tuning for optimal results within the given timeframe.</li>
</ul>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<ul>
<li>Using less powerful hardware or smaller video RAM would result in longer training times or lower model capacity.</li>
<li>Opting for a more complex model architecture without optimizations could lead to overfitting and poor performance on the LOD generation task.</li>
</ul>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>In cases where more advanced GPU hardware is available, this workflow may not be necessary as it would allow for larger models or longer training times, potentially resulting in better performance. However, the proposed workflow can be a starting point for those with limited resources or time constraints.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<ul>
<li>Workflow design specifically tailored to train MeshGPT on quad-based meshes within one day using a fixed sized video RAM.</li>
<li>Hyperparameter tuning and optimization techniques are implemented to maximize performance under the given constraints.</li>
</ul>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
<li><a href="https://www.runpod.io/">Runpod</a></li>
<li><a href="https://github.com/lucidrains/meshgpt-pytorch/issues/54">MeshGPT with Quads</a></li>
</ol>
<p>AI assistant Aria assisted with this article.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240413-training-quad-based-meshgpt-with-40gb-vram.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240413-calling-opensource-llm-with-aria.html</link>
  <description><![CDATA[ 




<section id="proposal-calling-open-source-llm-with-aria" class="level1">
<h1>Proposal: Calling Open Source LLM with Aria</h1>
<section id="the-context" class="level3">
<h3 class="anchored" data-anchor-id="the-context">The Context</h3>
<p>Access to OpenAI‚Äôs ChatGPT-4 cannot last forever.</p>
</section>
<section id="problem-statement" class="level3">
<h3 class="anchored" data-anchor-id="problem-statement">Problem Statement</h3>
<p>Using the assistant name Aria, I want to call an Apache2 licensed large language model (LLM) with open weights in my code editor, Visual Studio Code by Microsoft.</p>
</section>
<section id="proposed-solution" class="level3">
<h3 class="anchored" data-anchor-id="proposed-solution">Proposed Solution</h3>
<ol type="1">
<li><p><strong>Install LM Studio</strong>: A tool for managing and deploying large language models.</p></li>
<li><p><strong>Download a quantized version of Hermes-2-Pro-Mistral-7B</strong>: This model is available at <a href="https://huggingface.co/NousResearch/Hermes-2-Pro-Mistral-7B">Hugging Face Model Card</a>.</p></li>
<li><p><strong>Install Visual Studio Code</strong>: The popular code editor by Microsoft.</p></li>
<li><p><strong>Install the Genie extension</strong>: This lets you interact with AI models directly in Visual Studio Code. <a href="https://marketplace.visualstudio.com/items?itemName=ai-genie.chatgpt-vscode">ai-genie.chatgpt-vscode</a></p></li>
<li><p><strong>Set Genie to use the assistant name ‚ÄúAria‚Äù</strong>: This will give the AI a unique identity within Visual Studio Code.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"genie.assistantName"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Aria"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"genie.apiUrl"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"http://localhost:1234/v1/chat/completions"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-4">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"genie.model"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"id"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nousresearch/hermes-2-pro-mistral-7b"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"tokenLimit"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8192</span></span>
<span id="cb1-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div></li>
<li><p><strong>Start using Aria in Visual Studio Code</strong>: With the above settings, you can now access and interact with the open source large language model (LLM) named Hermes-2-Pro-Mistral-7B through the Genie extension.</p></li>
</ol>
</section>
<section id="benefits" class="level3">
<h3 class="anchored" data-anchor-id="benefits">Benefits</h3>
<ul>
<li>Access to an AI assistant large language model.</li>
<li>Ability to develop and fine-tune your data models on open-source datasets.</li>
</ul>
</section>
<section id="downsides" class="level3">
<h3 class="anchored" data-anchor-id="downsides">Downsides</h3>
<ul>
<li>Requires a good understanding of natural language processing (NLP) and machine learning concepts.</li>
<li>May require additional hardware resources for running the LLM locally.</li>
</ul>
</section>
<section id="road-not-taken" class="level3">
<h3 class="anchored" data-anchor-id="road-not-taken">Road Not Taken</h3>
<ul>
<li>Using proprietary AI models that are not open-source or freely available, such as OpenAI‚Äôs ChatGPT-4.</li>
<li>Relying on cloud-based services for AI interactions instead of local deployment.</li>
</ul>
</section>
<section id="infrequent-use-case" class="level3">
<h3 class="anchored" data-anchor-id="infrequent-use-case">Infrequent Use Case</h3>
<ul>
<li>In cases where real-time performance is critical, using an LLM might not be the optimal solution due to its computational requirements.</li>
</ul>
</section>
<section id="status" class="level3">
<h3 class="anchored" data-anchor-id="status">Status</h3>
<p>Status: Proposed <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level3">
<h3 class="anchored" data-anchor-id="decision-makers">Decision Makers</h3>
<ul>
<li>V-Sekai development team</li>
<li>Fire</li>
</ul>
</section>
<section id="tags" class="level3">
<h3 class="anchored" data-anchor-id="tags">Tags</h3>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> - GitHub page for the V-Sekai open-source project bringing social VR/VRSNS/metaverse components to the Godot Engine</li>
</ol>
<p>AI assistant Aria assisted with this article.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240413-calling-opensource-llm-with-aria.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240411-multiplayer-movement-with-parented-obejcts.html</link>
  <description><![CDATA[ 




<section id="proposal-implementing-a-3d-multiplayer-movement-system-with-parented-objects-and-inventory-management" class="level1">
<h1>Proposal: Implementing a 3D Multiplayer Movement System with Parented Objects and Inventory Management</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>The V-Sekai development team is working on enhancing the multiplayer experience in our VR game. We aim to create a more immersive and interactive environment for our players, akin to electrons circling in an atom or bustling activity on an MMOG street.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>Our VR game lacks a robust system for managing 3D multiplayer movement, parented objects, tracking validation, authentication, account metadata information, server boundaries, inventory management, and asset delivery. We also need to implement a mechanism for players to seamlessly leave and rejoin the game.</p>
</section>
<section id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams">Describe how your proposal will work with code, pseudo-code, mock-ups, or diagrams</h2>
<p>Our proposed solution involves implementing a series of features:</p>
<ol type="1">
<li><p><strong>3D Multiplayer Movement</strong>: We will use the libgodot process to manage 3D multiplayer movements. This will allow players to interactively move around in the 3D space, similar to electrons circling in an atom.</p></li>
<li><p><strong>Parented Objects</strong>: We will develop a system to handle parented objects, allowing for complex interactions between game entities.</p></li>
<li><p><strong>Tracking Validation &amp; Authentication</strong>: We will implement mechanisms to validate cross-communication and user inputs, along with an authentication system for account security.</p></li>
<li><p><strong>Account Metadata Information</strong>: We will store and manage account metadata information to personalize the user experience.</p></li>
<li><p><strong>Server Boundaries</strong>: We will set limitations on the server, such as boundaries, to maintain game balance and performance.</p></li>
<li><p><strong>Inventory Management</strong>: Players can spawn items from their inventory, create new items, and return them to the inventory.</p></li>
<li><p><strong>Game Rejoining</strong>: Players will have the ability to leave and rejoin the game without losing their progress.</p></li>
<li><p><strong>Asset Delivery and Upload</strong>: We will establish an efficient asset delivery and upload system.</p></li>
<li><p><strong>Voice Communication</strong>: We plan to add voice communication to enhance player interaction.</p></li>
</ol>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<ul>
<li>Enhanced player interaction with 3D multiplayer movement and voice communication.</li>
<li>Improved game balance and performance with server boundaries.</li>
<li>Better user experience with personalized account metadata information.</li>
<li>Seamless gameplay with the ability to leave and rejoin the game.</li>
</ul>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<ul>
<li>Requires significant development effort.</li>
<li>Potential for increased system complexity.</li>
</ul>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>We considered using existing game engines or libraries, but they did not meet our specific requirements for a highly interactive and immersive VR game.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>This proposal may not be suitable for smaller projects that do not require complex 3D multiplayer interactions or inventory management.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>The V-Sekai development team will implement this proposal.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team, ‚ÄúBioblaze Payne‚Äù, ‚Äúfire‚Äù</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
</ol>
<p>Assisted by Aria.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240411-multiplayer-movement-with-parented-obejcts.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240411-elixir-libgodot-zig.html</link>
  <description><![CDATA[ 




<section id="rejected-binding-gdextension-to-a-c-like-language-for-libgodot-to-implement-a-distributed-simulation" class="level1">
<h1>Rejected: Binding GDExtension to a C-like Language for Libgodot to Implement a Distributed Simulation</h1>
<section id="the-context" class="level2">
<h2 class="anchored" data-anchor-id="the-context">The Context</h2>
<p>The V-Sekai development team is working on enhancing the simulation experience in our VR game. We aim to create a more immersive and interactive environment for our players.</p>
</section>
<section id="the-problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="the-problem-statement">The Problem Statement</h2>
<p>We can bind GDExtension to a C-like language for libgodot to implement a distributed simulation.</p>
</section>
<section id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams" class="level2">
<h2 class="anchored" data-anchor-id="describe-how-your-proposal-will-work-with-code-pseudo-code-mock-ups-or-diagrams">Describe how your proposal will work with code, pseudo-code, mock-ups, or diagrams</h2>
<p>We propose to use godot-zig to bind GDExtension to Elixir. This will allow us to leverage the power of Elixir‚Äôs concurrency and fault-tolerance features, which are ideal for creating distributed simulations.</p>
</section>
<section id="the-benefits" class="level2">
<h2 class="anchored" data-anchor-id="the-benefits">The Benefits</h2>
<ul>
<li>Enhanced simulation performance due to Elixir‚Äôs efficient handling of concurrent processes.</li>
<li>Improved fault tolerance, as Elixir‚Äôs supervisor trees can automatically recover from errors.</li>
<li>Increased developer productivity, as Elixir‚Äôs syntax is concise and expressive.</li>
</ul>
</section>
<section id="the-downsides" class="level2">
<h2 class="anchored" data-anchor-id="the-downsides">The Downsides</h2>
<ul>
<li>Requires learning a new programming language (Elixir), which may increase the development time initially.</li>
<li>Potential compatibility issues between Elixir and existing parts of the system.</li>
</ul>
</section>
<section id="the-road-not-taken" class="level2">
<h2 class="anchored" data-anchor-id="the-road-not-taken">The Road Not Taken</h2>
<p>We considered using other languages like Rust or Go, but they did not offer the same level of concurrency and fault-tolerance features as Elixir.</p>
</section>
<section id="the-infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="the-infrequent-use-case">The Infrequent Use Case</h2>
<p>This proposal may not be suitable for smaller projects that do not require complex distributed simulations.</p>
</section>
<section id="in-core-and-done-by-us" class="level2">
<h2 class="anchored" data-anchor-id="in-core-and-done-by-us">In Core and Done by Us</h2>
<p>The V-Sekai development team will implement this proposal.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Rejected <!-- Draft | Proposed | Rejected | Accepted | Deprecated | Superseded by --></p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
<li><a href="https://github.com/godot-zig/godot-zig">godot-zig</a></li>
<li><a href="https://github.com/E-xyza/zigler">zigler</a></li>
</ol>
<p>Assisted by Aria.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240411-elixir-libgodot-zig.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
<item>
  <title></title>
  <link>https://v-sekai.github.io/manuals/decisions/20240411-elixir-libgodot-bundlex.html</link>
  <description><![CDATA[ 




<section id="proposed-use-bundlex-for-binding-gdextension-to-elixir-for-libgodot-to-implement-a-distributed-simulation" class="level1">
<h1>Proposed: Use Bundlex for Binding GDExtension to Elixir for Libgodot to Implement a Distributed Simulation</h1>
<section id="context" class="level2">
<h2 class="anchored" data-anchor-id="context">Context</h2>
<p>The V-Sekai development team is striving to enhance the simulation experience in our VR game. We aim to create a more immersive and interactive environment for our players.</p>
</section>
<section id="problem-statement" class="level2">
<h2 class="anchored" data-anchor-id="problem-statement">Problem Statement</h2>
<p>We can bind GDExtension to a C-like language for libgodot to implement a distributed simulation.</p>
</section>
<section id="proposed-solution" class="level2">
<h2 class="anchored" data-anchor-id="proposed-solution">Proposed Solution</h2>
<p>Instead of godot-zig, we propose using <strong>Bundlex</strong>, a multi-platform tool for compiling C and C++ code along with Elixir projects. This will allow us to leverage the power of Elixir‚Äôs concurrency and fault-tolerance features, which are ideal for creating distributed simulations.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode elixir code-with-copy"><code class="sourceCode elixir"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">defmodule</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">MyProject</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb1-2">  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">use</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Bundlex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Project</span></span>
<span id="cb1-3"></span>
<span id="cb1-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> project<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">()</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb1-5">    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-6">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">app:</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">:my_project</span>,</span>
<span id="cb1-7">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">compilers:</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">:bundlex</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span>,</span>
<span id="cb1-8">      <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">deps:</span> deps<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb1-9">    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-10">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-11"></span>
<span id="cb1-12">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">defp</span> deps <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">do</span></span>
<span id="cb1-13">    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">[</span></span>
<span id="cb1-14">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">:bundlex</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"~&gt; 0.2"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-15">    <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb1-16">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span>
<span id="cb1-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">end</span></span></code></pre></div>
</section>
<section id="benefits" class="level2">
<h2 class="anchored" data-anchor-id="benefits">Benefits</h2>
<ul>
<li>Enhanced simulation performance due to Elixir‚Äôs efficient handling of concurrent processes.</li>
<li>Improved fault tolerance, as Elixir‚Äôs supervisor trees can automatically recover from errors.</li>
<li>Increased developer productivity, as Elixir‚Äôs syntax is concise and expressive.</li>
</ul>
</section>
<section id="downsides" class="level2">
<h2 class="anchored" data-anchor-id="downsides">Downsides</h2>
<ul>
<li>Requires learning a new programming language (Elixir), which may increase the development time initially.</li>
<li>Potential compatibility issues between Elixir and existing parts of the system.</li>
</ul>
</section>
<section id="alternatives-considered" class="level2">
<h2 class="anchored" data-anchor-id="alternatives-considered">Alternatives Considered</h2>
<p>We considered using other languages like Rust or Go, but they did not offer the same level of concurrency and fault-tolerance features as Elixir.</p>
</section>
<section id="infrequent-use-case" class="level2">
<h2 class="anchored" data-anchor-id="infrequent-use-case">Infrequent Use Case</h2>
<p>This proposal may not be suitable for smaller projects that do not require complex distributed simulations.</p>
</section>
<section id="implementation" class="level2">
<h2 class="anchored" data-anchor-id="implementation">Implementation</h2>
<p>The V-Sekai development team will implement this proposal.</p>
</section>
<section id="status" class="level2">
<h2 class="anchored" data-anchor-id="status">Status</h2>
<p>Status: Proposed</p>
</section>
<section id="decision-makers" class="level2">
<h2 class="anchored" data-anchor-id="decision-makers">Decision Makers</h2>
<ul>
<li>V-Sekai development team</li>
</ul>
</section>
<section id="tags" class="level2">
<h2 class="anchored" data-anchor-id="tags">Tags</h2>
<ul>
<li>V-Sekai</li>
</ul>
</section>
<section id="further-reading" class="level2">
<h2 class="anchored" data-anchor-id="further-reading">Further Reading</h2>
<ol type="1">
<li><a href="https://github.com/v-sekai">V-Sekai ¬∑ GitHub</a> - Official GitHub account for the V-Sekai development community focusing on social VR functionality for the Godot Engine.</li>
<li><a href="https://github.com/v-sekai/v-sekai-game">V-Sekai/v-sekai-game</a> is the GitHub page for the V-Sekai open-source project, which brings social VR/VRSNS/metaverse components to the Godot Engine.</li>
<li><a href="https://hex.pm/packages/bundlex">Bundlex</a></li>
</ol>
<p>Assisted by Aria.</p>


</section>
</section>

 ]]></description>
  <guid>https://v-sekai.github.io/manuals/decisions/20240411-elixir-libgodot-bundlex.html</guid>
  <pubDate>Sun, 12 May 2024 18:32:25 GMT</pubDate>
</item>
</channel>
</rss>
